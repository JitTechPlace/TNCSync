<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">
    
    <!--#region Color Resource-->
    <RadialGradientBrush x:Key="rdRadialColorBlue">
        <GradientStop Color="#FF116BAA" Offset="1"/>
        <GradientStop Color="#FF58ABE4" Offset="0"/>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="rdRadialColorBlue-01">
        <GradientStop Color="#FF00375D" Offset="1"/>
        <GradientStop Color="#FF4E6980"/>
    </RadialGradientBrush>

    <RadialGradientBrush x:Key="rdRadialColorBlue-02">
        <GradientStop Color="{StaticResource winBorderColor1}" Offset="0"/>
         <GradientStop Color="{StaticResource winBorderColor2}" Offset="0.75"/>
        <GradientStop Color="{StaticResource winBorderColor3}" Offset="1"/>
    </RadialGradientBrush>

    <SolidColorBrush x:Key="rdSolidLightRed" Color="#E97180"/>
    <SolidColorBrush x:Key="rdSolidBlue" Color="#FF116CAB"/>
    <SolidColorBrush x:Key="rdSolidCement" Color="#FF1F3C59"/>
    <SolidColorBrush x:Key="rdSolidWhiteSmoke" Color="#FFE8E4E4"/>
    <SolidColorBrush x:Key="rdCustomGrey" Color="#FF474747"/>
    <SolidColorBrush x:Key="SCBCement" Color="#FF3B6983"/>
    <SolidColorBrush x:Key="SCBLightBlue" Color="#FF28768D"/>
    
    <!--Backgroung Colors-->
    <Color x:Key="primaryBackColor1">#FF00375D</Color>
    <Color x:Key="primaryBackColor2">#FF4E6980</Color>
    <Color x:Key="secondaryBackColor1">#FF116BAA</Color>
    <Color x:Key="secondaryBackColor2">#FF58ABE4</Color>
    
    <!--Window Border Colors-->
    <Color x:Key="winBorderColor1">#FF00375D</Color>
    <Color x:Key="winBorderColor2">#FF4E6980</Color>
    <Color x:Key="winBorderColor3">#FF58ABE4</Color>
    
    <!--Tab Control BG-->
    <SolidColorBrush x:Key="tabControlColor" Color="#BBE3FF"/>
    <SolidColorBrush x:Key="tabControlHeaderColor" Color="#61B0B7"/>
    
    <!--Color Palette-->
    <SolidColorBrush x:Key="color1" Color="#252E34"/>
    <SolidColorBrush x:Key="color2" Color="#784DFD"/>
    <SolidColorBrush x:Key="color3" Color="#4ADAEC"/>
    <SolidColorBrush x:Key="color4" Color="#FB539B"/>
    <SolidColorBrush x:Key="color5" Color="#7E82FC"/>
    <SolidColorBrush x:Key="color6" Color="#FFC047"/>
    <SolidColorBrush x:Key="color7" Color="#EF6C96"/>
    <SolidColorBrush x:Key="color8" Color="#78A3FC"/>
    <SolidColorBrush x:Key="color9" Color="#07F3C0"/>
    <SolidColorBrush x:Key="color10" Color="#FBA1AA"/>
    <SolidColorBrush x:Key="color11" Color="#BBE3FF"/>
    
    <!--Font Colors-->
    <SolidColorBrush x:Key="titleColor1" Color="#E0E1F1"/>
    <SolidColorBrush x:Key="titleColor2" Color="#D5CFF5"/>
    <SolidColorBrush x:Key="titleColor3" Color="#BCBEE0"/>
    <SolidColorBrush x:Key="plainTextColor1" Color="#9497CD"/>
    <SolidColorBrush x:Key="plainTextColor2" Color="#7C80C2"/>
    <SolidColorBrush x:Key="plainTextColor3" Color="DarkGray"/>
    <SolidColorBrush x:Key="headerTextColor" Color="#0085c4"/>

    <!--Panel Colors-->
    <SolidColorBrush x:Key="panelColor" Color="#FF00375D"/>
    <SolidColorBrush x:Key="panelOverColor" Color="#FF4E6980"/>
    <SolidColorBrush x:Key="panelActiveColor" Color="#FF116BAA"/>
    
    <!--Button Colors-->
    <!--TextBox Colors-->

    <!--#endregion-->
    
    <!--#region FontResources-->
    <FontFamily x:Key="iFontRadleyReg">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Radley</FontFamily>
    <FontFamily x:Key="iFontRadleyIta">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Radley Italic</FontFamily>

    <FontFamily x:Key="iFontArimoReg">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Arimo</FontFamily>
    <FontFamily x:Key="iFontArimoMed">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Arimo Medium</FontFamily>
    <FontFamily x:Key="iFontArimoBold">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Arimo Bold</FontFamily>


    <FontFamily x:Key="iFontComforta">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Comfortaa</FontFamily>
    
    <FontFamily x:Key="iFontMontSerratEL">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat ExtraLight</FontFamily>
    <FontFamily x:Key="iFontMontSerratMedium">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat Medium</FontFamily>
    <FontFamily x:Key="iFontMontSerratReg">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat</FontFamily>
    <FontFamily x:Key="iFontMontSerratThin">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat Thin</FontFamily>
    <FontFamily x:Key="iFontMontSerratSemiBold">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat SemiBold</FontFamily>
    <FontFamily x:Key="iFontMontSerratLight">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat Light</FontFamily>

    <FontFamily x:Key="iFontMontSerratAlternateMedium">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat Alternates Medium</FontFamily>
    <FontFamily x:Key="iFontMontSerratAlternateRegular">pack://application:,,,/TNCSync;component/AppResources/Fonts/#Montserrat Alternates</FontFamily>

    <!--#endregion-->
    
    
    <!--#region Converters-->
    
    <!--#endregion-->
    
    <!--#region Object Styles-->
    <Style x:Key="TNCStyleListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SPStyleButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--#region ButtonStyles-->
    <!--Menu Button-->
    <Style x:Key="menuButton" TargetType="RadioButton">
        <!--Normal ButtonStyles-->
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="-5 0 0 5"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--ButtonStyle onHover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Margin" Value="0 0 0 5"/>
                <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>

            <!--Active ButtonStyle-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Margin" Value="0 0 0 5"/>
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Menu ButtonIcon-->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <!--hw:image-->
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value=" 35 0 20 0"/>
    </Style>
    
    <!--Menu ButtonText-->
    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--Control Bar Button-->
    <Style x:Key="controlButton" TargetType="Button">
        <!--Normal ButtonStyles-->
        <Setter Property="Width" Value="35"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--Button style on hover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Menu ButtonIcon-->
    <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
        <!--hw:Image-->
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="9"/>
        <Setter Property="Height" Value="9"/>
    </Style>
    
    <!--Icon Button-->
    <Style x:Key="iconButton" TargetType="Button">
        <!--Nomral ButtonStyle-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource color1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--Button Style onHover-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Menu Button Icon-->
    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <!--hw:Image-->
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType=Button}}"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
    </Style>
    <!--#endregion-->
    
    <!--#region Combobox Styles-->
    <Style x:Key="ComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border CornerRadius="3 0 0 3" BorderThickness="1 1 0 1" Background="WhiteSmoke" BorderBrush="Gray">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxButttonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="WhiteSmoke" x:Name="border" CornerRadius="0 3 3 0" BorderThickness="0 1 1 1" BorderBrush="Gray">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundComboBox" TargetType="{x:Type ComboBox}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition MaxWidth="18"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Name="PART_EditableTextBox" Style="{StaticResource ComboBoxTextBoxStyle}" Padding="5 0 0 0" Height="{TemplateBinding Height}"/>
                        <ToggleButton Grid.Column="1" Margin="0" Height="{TemplateBinding Height}" Style="{StaticResource ComboBoxButttonStyle}" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            <Path Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="Gray"/>
                            <!--DodgerBlue-->
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5 0 0 0"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="3" Background="LightGray" BorderBrush="LightGray"/>
                                <ScrollViewer Margin="4 6 4 6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region DataGrid -->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="#ff2c3e50"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="VerticalGridLinesBrush" Value="#4b6584"/>
        <Setter Property="HorizontalGridLinesBrush" Value="#4b6584"/>
        <Setter Property="AlternatingRowBackground" Value="#ff2c3e50"/>
        <Setter Property="RowBackground" Value="#34495e"/>
        <Setter Property="RowHeight" Value="25"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
    </Style>
    <!--#endregion-->
    
    <!--#region DatePicker-->
    
    <!--#endregion-->
    
    <!--#endregion-->
</ResourceDictionary>